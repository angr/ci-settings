name: angr CI

on:
  workflow_call:
    inputs:
      nightly:
        description: "Enable nightly-only tests"
        default: false
        type: boolean
        required: false
      container_image:
        description: "Container image to use"
        default: "angr/ci:2"
        type: string
        required: false
      afl:
        description: "Set AFL parameters during test stage"
        default: false
        type: boolean
        required: false

jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04
    container:
      image: ${{ inputs.container_image }}
    steps:
    - run: /root/scripts/azure-build.sh
      name: Build CI artifact
      env:
        NIGHTLY: ${{ inputs.nightly }}
    - uses: actions/upload-artifact@v4
      with:
        name: build_archive
        path: ./build.tar.zst
        compression-level: 0

  lint:
    name: Lint
    runs-on: ubuntu-20.04
    container:
      image: ${{ inputs.container_image }}
    needs: build
    steps:
    - uses: actions/download-artifact@v4
      with:
        name: build_archive
    - run: /root/scripts/azure-lint.sh
      name: Run linter

  test:
    name: Test
    runs-on: ubuntu-20.04
    container:
      image: ${{ inputs.container_image }}
      options: -v /var/run/docker.sock:/var/run/docker.sock -v /proc:/hostproc --cap-add=SYS_PTRACE --security-opt seccomp:unconfined
    needs: build
    strategy:
      fail-fast: false
      matrix:
        worker: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
    steps:
    - run: |
        echo 1 | tee /hostproc/sys/kernel/sched_child_runs_first
        echo core | tee /hostproc/sys/kernel/core_pattern
      name: Set AFL parameters
      if: ${{ inputs.afl }}
    - uses: actions/download-artifact@v3
      with:
        name: build_archive
    - run: /root/scripts/azure-test.sh
      name: Run tests
      env:
        WORKER: ${{ matrix.worker }}
        NUM_WORKERS: 10
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: Test Results ${{ matrix.worker }}
        path: build/results/*.tests.xml

  publish-test-results:
    name: "Publish Unit Tests Results"
    needs: test
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Send result email
        if: inputs.nightly && needs.test.result == 'failure'
        env:
          MAILGUN_API_TOKEN: ${{ secrets.MAILGUN_API_TOKEN }}
        run: |
          BUILD_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          curl -s --user "api:$MAILGUN_API_TOKEN" \
            https://api.mailgun.net/v3/mail.rev.fish/messages \
            -F from="angr Nightly CI <angr-nightly-ci@mail.rev.fish>" \
            -F to=angr-dev@asu.edu \
            -F subject="$GITHUB_REPOSITORY nightly CI failed" \
            -F text="Link to failed run: $BUILD_URL"
